version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: node-backend
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=${{ secrets.DB_USER }}
      - DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      - DB_NAME=${{ secrets.DB_NAME }}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./backend:/app:delegated
      - backend-node-modules:/app/node_modules
    networks:
      - backend-network
      - shared-network
    command: sh -c "npm install && npm run dev"
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-frontend
    ports:
      - "3001:80"
    depends_on:
      - backend
    networks:
      - frontend-network
      - shared-network

  db:
    image: postgres:14
    container_name: postgres-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${{ secrets.DB_USER }}
      POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
      POSTGRES_DB: ${{ secrets.DB_NAME }}
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  pgdata:
  backend-node-modules:

networks:
  backend-network:
    driver: bridge
  frontend-network:
    driver: bridge
  shared-network:
    driver: bridge